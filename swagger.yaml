swagger: "2.0"
info:
  version: "1.0.0"
  title: "Project API"
  description: "API documentation for the project entities"

tags:
  - name: "Users"
    description: "Operations related to users"
  - name: "Teams"
    description: "Operations related to teams"
  - name: "Activities"
    description: "Operations related to activities"
  - name: "Sessions"
    description: "Operations related to sessions"
  - name: "Grades"
    description: "Operations related to grades"
  - name: "Attendance"
    description: "Operations related to attendance"
  - name: "TeamActivities"
    description: "Operations related to team activities"

paths:
  /users/{id}:
    get:
      tags: ["Users"]
      summary: "Get a user by ID"
      parameters:
        - name: "id"
          in: "path"
          required: true
          type: "integer"
      responses:
        200:
          description: "Successful operation"
          schema:
            $ref: "#/definitions/User"
      produces:
        - "application/json"
    delete:
      tags: ["Users"]
      summary: "Delete a user by ID"
      parameters:
        - name: "id"
          in: "path"
          required: true
          type: "integer"
      responses:
        204:
          description: "User deleted successfully"
        404:
          description: "User not found"

  /users/team/{teamId}:
    get:
      tags: ["Users"]
      summary: "Get all users in a team"
      parameters:
        - name: "teamId"
          in: "path"
          required: true
          type: "integer"
      responses:
        200:
          description: "Successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/User"
      produces:
        - "application/json"

  /users:
    get:
      tags: ["Users"]
      summary: "Get all users"
      responses:
        200:
          description: "Successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/User"
      produces:
        - "application/json"

  /teams/{id}:
    parameters:
      - name: "id"
        in: "path"
        required: true
        type: "integer"
    get:
      tags: ["Teams"]
      summary: "Get a team by ID"
      responses:
        200:
          description: "Successful operation"
          schema:
            $ref: "#/definitions/Team"
      produces:
        - "application/json"
    post:
      tags: ["Teams"]
      summary: "Create a new team"
      parameters:
        - name: "team"
          in: "body"
          required: true
          schema:
            $ref: "#/definitions/Team"
      responses:
        200:
          description: "Team created successfully"
          schema:
            $ref: "#/definitions/Team"
      consumes:
        - "application/json"

  /activities:
    get:
      tags: ["Activities"]
      summary: "Get all activities"
      responses:
        200:
          description: "Successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Activity"
      produces:
        - "application/json"

  /sessions:
    get:
      tags: ["Sessions"]
      summary: "Get all sessions"
      responses:
        200:
          description: "Successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Session"
      produces:
        - "application/json"
        
  /sessions/{activityId}:
    parameters:
      - name: "activityId"
        in: "path"
        required: true
        type: "integer"
    get:
      tags: ["Sessions"]
      summary: "Get a session by activity ID"
      responses:
        200:
          description: "Successful operation"
          schema:
            $ref: "#/definitions/Session"
      produces:
        - "application/json"
    post:
      tags: ["Sessions"]
      summary: "Create a new session"
      parameters:
        - name: "session"
          in: "body"
          required: true
          schema:
            $ref: "#/definitions/Session"
      responses:
        200:
          description: "Session created successfully"
          schema:
            $ref: "#/definitions/Session"
      consumes:
        - "application/json"

  /grades/student/{studentId}:
    parameters:
      - name: "studentId"
        in: "path"
        required: true
        type: "integer"
    get:
      tags: ["Grades"]
      summary: "Get all grades by student ID"
      responses:
        200:
          description: "Successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Grade"
      produces:
        - "application/json"
    post:
      tags: ["Grades"]
      summary: "Create a new grade"
      parameters:
        - name: "grade"
          in: "body"
          required: true
          schema:
            $ref: "#/definitions/Grade"
      responses:
        200:
          description: "Grade created successfully"
          schema:
            $ref: "#/definitions/Grade"
      consumes:
        - "application/json"
        
  /grades/session/{sessionId}:
    parameters:
      - name: "sessionId"
        in: "path"
        required: true
        type: "integer"
    get:
      tags: ["Grades"]
      summary: "Get grades by session ID"
      responses:
        200:
          description: "Successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Grade"
      produces:
        - "application/json"

  /grades/{id}:
    parameters:
      - name: "id"
        in: "path"
        required: true
        type: "integer"
    put:
      tags: ["Grades"]
      summary: "Update grade"
      parameters:
        - name: "grade"
          in: "body"
          required: true
          schema:
            $ref: "#/definitions/Grade"
      responses:
        200:
          description: "Grade updated successfully"
          schema:
            $ref: "#/definitions/Grade"
      consumes:
        - "application/json"
      

  /attendance/student/{studentId}:
    parameters:
      - name: "studentId"
        in: "path"
        required: true
        type: "integer"
    get:
      tags: ["Attendance"]
      summary: "Get all attendance records by student ID"
      responses:
        200:
          description: "Successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Attendance"
      produces:
        - "application/json"
    post:
      tags: ["Attendance"]
      summary: "Create a new attendance record"
      parameters:
        - name: "attendance"
          in: "body"
          required: true
          schema:
            $ref: "#/definitions/Attendance"
      responses:
        200:
          description: "Attendance record created successfully"
          schema:
            $ref: "#/definitions/Attendance"
      consumes:
        - "application/json"
        
  /attendance/session/{sessionId}:
    parameters:
      - name: "sessionId"
        in: "path"
        required: true
        type: "integer"
    get:
      tags: ["Attendance"]
      summary: "Get attendance records by session ID"
      responses:
        200:
          description: "Successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Attendance"
      produces:
        - "application/json"

  /attendance/{id}:
    parameters:
      - name: "id"
        in: "path"
        required: true
        type: "integer"
    put:
      tags: ["Attendance"]
      summary: "Update attendance"
      parameters:
        - name: "attendance"
          in: "body"
          required: true
          schema:
            $ref: "#/definitions/Attendance"
      responses:
        200:
          description: "Attendance updated successfully"
          schema:
            $ref: "#/definitions/Attendance"
      consumes:
        - "application/json"      

  /team-activities/team/{teamId}:
    parameters:
      - name: "teamId"
        in: "path"
        required: true
        type: "integer"
    get:
      tags: ["TeamActivities"]
      summary: "Get all team activities by team ID"
      responses:
        200:
          description: "Successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/TeamActivity"
      produces:
        - "application/json"
    post:
      tags: ["TeamActivities"]
      summary: "Create a new team activity"
      parameters:
        - name: "teamActivity"
          in: "body"
          required: true
          schema:
            $ref: "#/definitions/TeamActivity"
      responses:
        200:
          description: "Team activity created successfully"
          schema:
            $ref: "#/definitions/TeamActivity"
      consumes:
        - "application/json"
        
  /team-activities/activity/{activityId}:
    parameters:
      - name: "activityId"
        in: "path"
        required: true
        type: "integer"
    get:
      tags: ["TeamActivities"]
      summary: "Get all team activities by activity ID"
      responses:
        200:
          description: "Successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/TeamActivity"
      produces:
        - "application/json"      

definitions:
  User:
    type: "object"
    properties:
      id:
        type: "integer"
      name:
        type: "string"
      email:
        type: "string"
      leader:
        type: "boolean"
      teamId:
        type: "integer"
      mentor:
        type: "boolean"
  Team:
    type: "object"
    properties:
      id:
        type: "integer"
      name:
        type: "string"
  Activity:
    type: "object"
    properties:
      id:
        type: "integer"
      name:
        type: "string"
  Session:
    type: "object"
    properties:
      id:
        type: "integer"
      date:
        type: "string"
      activityId:
        type: "integer"
  Grade:
    type: "object"
    properties:
      id:
        type: "integer"
      studentId:
        type: "integer"
      sessionId:
        type: "integer"
      grade:
        type: "integer"
      comment:
        type: "string"
  Attendance:
    type: "object"
    properties:
      id:
        type: "integer"
      studentId:
        type: "integer"
      sessionId:
        type: "integer"
      present:
        type: "boolean"
  TeamActivity:
    type: "object"
    properties:
      id:
        type: "integer"
      teamId:
        type: "integer"
      activityId:
        type: "integer"
